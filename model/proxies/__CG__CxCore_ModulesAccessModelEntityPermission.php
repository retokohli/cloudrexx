<?php

namespace Cx\Model\Proxies\__CG__\Cx\Core_Modules\Access\Model\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Permission extends \Cx\Core_Modules\Access\Model\Entity\Permission implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

        return parent::__get($name);
    }





    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'allowedProtocols', 'allowedMethods', 'requiresLogin', 'validUserGroups', 'validAccessIds', 'readDataAccesses', 'writeDataAccesses', 'callback', 'validators', 'virtual');
        }

        return array('__isInitialized__', 'id', 'allowedProtocols', 'allowedMethods', 'requiresLogin', 'validUserGroups', 'validAccessIds', 'readDataAccesses', 'writeDataAccesses', 'callback', 'validators', 'virtual');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Permission $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowedProtocols($allowedProtocols)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowedProtocols', array($allowedProtocols));

        return parent::setAllowedProtocols($allowedProtocols);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowedProtocols()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowedProtocols', array());

        return parent::getAllowedProtocols();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowedMethods($allowedMethods)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowedMethods', array($allowedMethods));

        return parent::setAllowedMethods($allowedMethods);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowedMethods()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowedMethods', array());

        return parent::getAllowedMethods();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequiresLogin($requiresLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequiresLogin', array($requiresLogin));

        return parent::setRequiresLogin($requiresLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequiresLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequiresLogin', array());

        return parent::getRequiresLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidUserGroups($validUserGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidUserGroups', array($validUserGroups));

        return parent::setValidUserGroups($validUserGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidUserGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidUserGroups', array());

        return parent::getValidUserGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidAccessIds($validAccessIds)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidAccessIds', array($validAccessIds));

        return parent::setValidAccessIds($validAccessIds);
    }

    /**
     * {@inheritDoc}
     */
    public function getvalidAccessIds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getvalidAccessIds', array());

        return parent::getvalidAccessIds();
    }

    /**
     * {@inheritDoc}
     */
    public function addReadDataAccess(\Cx\Core_Modules\DataAccess\Model\Entity\DataAccess $readDataAccesses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReadDataAccess', array($readDataAccesses));

        return parent::addReadDataAccess($readDataAccesses);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReadDataAccess(\Cx\Core_Modules\DataAccess\Model\Entity\DataAccess $readDataAccesses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReadDataAccess', array($readDataAccesses));

        return parent::removeReadDataAccess($readDataAccesses);
    }

    /**
     * {@inheritDoc}
     */
    public function setReadDataAccesses(\Cx\Core_Modules\DataAccess\Model\Entity\DataAccess $dataAccess)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadDataAccesses', array($dataAccess));

        return parent::setReadDataAccesses($dataAccess);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadDataAccesses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadDataAccesses', array());

        return parent::getReadDataAccesses();
    }

    /**
     * {@inheritDoc}
     */
    public function addWriteDataAccess(\Cx\Core_Modules\DataAccess\Model\Entity\DataAccess $writeDataAccesses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addWriteDataAccess', array($writeDataAccesses));

        return parent::addWriteDataAccess($writeDataAccesses);
    }

    /**
     * {@inheritDoc}
     */
    public function removeWriteDataAccess(\Cx\Core_Modules\DataAccess\Model\Entity\DataAccess $writeDataAccesses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeWriteDataAccess', array($writeDataAccesses));

        return parent::removeWriteDataAccess($writeDataAccesses);
    }

    /**
     * {@inheritDoc}
     */
    public function setWriteDataAccesses(\Cx\Core_Modules\DataAccess\Model\Entity\DataAccess $dataAccess)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWriteDataAccesses', array($dataAccess));

        return parent::setWriteDataAccesses($dataAccess);
    }

    /**
     * {@inheritDoc}
     */
    public function getWriteDataAccesses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWriteDataAccesses', array());

        return parent::getWriteDataAccesses();
    }

    /**
     * {@inheritDoc}
     */
    public function setCallback($callback)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCallback', array($callback));

        return parent::setCallback($callback);
    }

    /**
     * {@inheritDoc}
     */
    public function getCallback()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCallback', array());

        return parent::getCallback();
    }

    /**
     * {@inheritDoc}
     */
    public function setVirtual($virtual)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVirtual', array($virtual));

        return parent::setVirtual($virtual);
    }

    /**
     * {@inheritDoc}
     */
    public function hasAccess(array $params = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasAccess', array($params));

        return parent::hasAccess($params);
    }

    /**
     * {@inheritDoc}
     */
    public function getComponentController()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComponentController', array());

        return parent::getComponentController();
    }

    /**
     * {@inheritDoc}
     */
    public function isVirtual()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVirtual', array());

        return parent::isVirtual();
    }

    /**
     * {@inheritDoc}
     */
    public function validate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', array());

        return parent::validate();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($methodName, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($methodName, $arguments));

        return parent::__call($methodName, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
