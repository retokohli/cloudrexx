<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxModulesCalendarModelEntityEventFieldProxy extends \Cx\Modules\Calendar\Model\Entity\EventField implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function setEventId($eventId)
    {
        $this->_load();
        return parent::setEventId($eventId);
    }

    public function getEventId()
    {
        $this->_load();
        return parent::getEventId();
    }

    public function setTitle($title)
    {
        $this->_load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->_load();
        return parent::getTitle();
    }

    public function setLangId($langId)
    {
        $this->_load();
        return parent::setLangId($langId);
    }

    public function getLangId()
    {
        $this->_load();
        return parent::getLangId();
    }

    public function setTeaser($teaser)
    {
        $this->_load();
        return parent::setTeaser($teaser);
    }

    public function getTeaser()
    {
        $this->_load();
        return parent::getTeaser();
    }

    public function setDescription($description)
    {
        $this->_load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->_load();
        return parent::getDescription();
    }

    public function setRedirect($redirect)
    {
        $this->_load();
        return parent::setRedirect($redirect);
    }

    public function getRedirect()
    {
        $this->_load();
        return parent::getRedirect();
    }

    public function setPlace($place)
    {
        $this->_load();
        return parent::setPlace($place);
    }

    public function getPlace()
    {
        $this->_load();
        return parent::getPlace();
    }

    public function setPlaceCity($placeCity)
    {
        $this->_load();
        return parent::setPlaceCity($placeCity);
    }

    public function getPlaceCity()
    {
        $this->_load();
        return parent::getPlaceCity();
    }

    public function setPlaceCountry($placeCountry)
    {
        $this->_load();
        return parent::setPlaceCountry($placeCountry);
    }

    public function getPlaceCountry()
    {
        $this->_load();
        return parent::getPlaceCountry();
    }

    public function setOrgName($orgName)
    {
        $this->_load();
        return parent::setOrgName($orgName);
    }

    public function getOrgName()
    {
        $this->_load();
        return parent::getOrgName();
    }

    public function setOrgCity($orgCity)
    {
        $this->_load();
        return parent::setOrgCity($orgCity);
    }

    public function getOrgCity()
    {
        $this->_load();
        return parent::getOrgCity();
    }

    public function setOrgCountry($orgCountry)
    {
        $this->_load();
        return parent::setOrgCountry($orgCountry);
    }

    public function getOrgCountry()
    {
        $this->_load();
        return parent::getOrgCountry();
    }

    public function setEvent(\Cx\Modules\Calendar\Model\Entity\Event $event)
    {
        $this->_load();
        return parent::setEvent($event);
    }

    public function getEvent()
    {
        $this->_load();
        return parent::getEvent();
    }

    public function __get($name)
    {
        $this->_load();
        return parent::__get($name);
    }

    public function getComponentController()
    {
        $this->_load();
        return parent::getComponentController();
    }

    public function setVirtual($virtual)
    {
        $this->_load();
        return parent::setVirtual($virtual);
    }

    public function isVirtual()
    {
        $this->_load();
        return parent::isVirtual();
    }

    public function validate()
    {
        $this->_load();
        return parent::validate();
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'eventId', 'title', 'langId', 'teaser', 'description', 'redirect', 'place', 'placeCity', 'placeCountry', 'orgName', 'orgCity', 'orgCountry', 'event');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}