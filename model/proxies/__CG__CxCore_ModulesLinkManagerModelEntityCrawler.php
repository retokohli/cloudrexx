<?php

namespace Cx\Model\Proxies\__CG__\Cx\Core_Modules\LinkManager\Model\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Crawler extends \Cx\Core_Modules\LinkManager\Model\Entity\Crawler implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'id', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'lang', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'startTime', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'endTime', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'totalLinks', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'totalBrokenLinks', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'runStatus');
        }

        return array('__isInitialized__', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'id', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'lang', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'startTime', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'endTime', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'totalLinks', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'totalBrokenLinks', '' . "\0" . 'Cx\\Core_Modules\\LinkManager\\Model\\Entity\\Crawler' . "\0" . 'runStatus');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Crawler $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLang', array());

        return parent::getLang();
    }

    /**
     * {@inheritDoc}
     */
    public function setLang($lang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLang', array($lang));

        return parent::setLang($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartTime', array());

        return parent::getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    public function updateStartTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateStartTime', array());

        return parent::updateStartTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartTime($startTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartTime', array($startTime));

        return parent::setStartTime($startTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndTime', array());

        return parent::getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function updateEndTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateEndTime', array());

        return parent::updateEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndTime($endTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndTime', array($endTime));

        return parent::setEndTime($endTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalLinks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalLinks', array());

        return parent::getTotalLinks();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalLinks($totalLinks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalLinks', array($totalLinks));

        return parent::setTotalLinks($totalLinks);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalBrokenLinks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalBrokenLinks', array());

        return parent::getTotalBrokenLinks();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalBrokenLinks($totalBrokenLinks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalBrokenLinks', array($totalBrokenLinks));

        return parent::setTotalBrokenLinks($totalBrokenLinks);
    }

    /**
     * {@inheritDoc}
     */
    public function getRunStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunStatus', array());

        return parent::getRunStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setRunStatus($runStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRunStatus', array($runStatus));

        return parent::setRunStatus($runStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function updateFromArray($newData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateFromArray', array($newData));

        return parent::updateFromArray($newData);
    }

}
