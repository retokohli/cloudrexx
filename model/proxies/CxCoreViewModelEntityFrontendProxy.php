<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxCoreViewModelEntityFrontendProxy extends \Cx\Core\View\Model\Entity\Frontend implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function setLanguage($language)
    {
        $this->_load();
        return parent::setLanguage($language);
    }

    public function getLanguage()
    {
        $this->_load();
        return parent::getLanguage();
    }

    public function setTheme($theme)
    {
        $this->_load();
        return parent::setTheme($theme);
    }

    public function getTheme()
    {
        $this->_load();
        return parent::getTheme();
    }

    public function setChannel($channel)
    {
        $this->_load();
        return parent::setChannel($channel);
    }

    public function getChannel()
    {
        $this->_load();
        return parent::getChannel();
    }

    public function setLocaleRelatedByIso1s(\Cx\Core\Locale\Model\Entity\Language $localeRelatedByIso1s)
    {
        $this->_load();
        return parent::setLocaleRelatedByIso1s($localeRelatedByIso1s);
    }

    public function getLocaleRelatedByIso1s()
    {
        $this->_load();
        return parent::getLocaleRelatedByIso1s();
    }

    public function setSkin(\Cx\Core\View\Model\Entity\Frontend $skin)
    {
        $this->_load();
        return parent::setSkin($skin);
    }

    public function getSkin()
    {
        $this->_load();
        return parent::getSkin();
    }

    public function __get($name)
    {
        $this->_load();
        return parent::__get($name);
    }

    public function getComponentController()
    {
        $this->_load();
        return parent::getComponentController();
    }

    public function setVirtual($virtual)
    {
        $this->_load();
        return parent::setVirtual($virtual);
    }

    public function isVirtual()
    {
        $this->_load();
        return parent::isVirtual();
    }

    public function validate()
    {
        $this->_load();
        return parent::validate();
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'language', 'theme', 'channel', 'localeRelatedByIso1s');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}