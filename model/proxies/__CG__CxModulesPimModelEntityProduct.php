<?php

namespace Cx\Model\Proxies\__CG__\Cx\Modules\Pim\Model\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Cx\Modules\Pim\Model\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

        return parent::__get($name);
    }





    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'entityClass', 'entityAttributes', 'renewable', 'expirable', 'upgradable', 'expirationUnit', 'expirationQuantifier', 'cancellationUnit', 'cancellationQuantifier', 'noteEntity', 'noteRenewal', 'noteUpgrade', 'noteExpiration', 'notePrice', 'subscriptions', 'prices', 'upgrades', 'renewalOptions', 'defaultRenewalOption', 'validators', 'virtual');
        }

        return array('__isInitialized__', 'id', 'name', 'entityClass', 'entityAttributes', 'renewable', 'expirable', 'upgradable', 'expirationUnit', 'expirationQuantifier', 'cancellationUnit', 'cancellationQuantifier', 'noteEntity', 'noteRenewal', 'noteUpgrade', 'noteExpiration', 'notePrice', 'subscriptions', 'prices', 'upgrades', 'renewalOptions', 'defaultRenewalOption', 'validators', 'virtual');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityClass($entityClass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityClass', array($entityClass));

        return parent::setEntityClass($entityClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityClass', array());

        return parent::getEntityClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityAttributes($entityAttributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityAttributes', array($entityAttributes));

        return parent::setEntityAttributes($entityAttributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityAttributes', array());

        return parent::getEntityAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setRenewable($renewable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRenewable', array($renewable));

        return parent::setRenewable($renewable);
    }

    /**
     * {@inheritDoc}
     */
    public function getRenewable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRenewable', array());

        return parent::getRenewable();
    }

    /**
     * {@inheritDoc}
     */
    public function isRenewable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRenewable', array());

        return parent::isRenewable();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpirable($expirable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpirable', array($expirable));

        return parent::setExpirable($expirable);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirable', array());

        return parent::getExpirable();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpirable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpirable', array());

        return parent::isExpirable();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpgradable($upgradable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpgradable', array($upgradable));

        return parent::setUpgradable($upgradable);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpgradable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpgradable', array());

        return parent::getUpgradable();
    }

    /**
     * {@inheritDoc}
     */
    public function isUpgradable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpgradable', array());

        return parent::isUpgradable();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpirationUnit($expirationUnit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpirationUnit', array($expirationUnit));

        return parent::setExpirationUnit($expirationUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationUnit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationUnit', array());

        return parent::getExpirationUnit();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpirationQuantifier($expirationQuantifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpirationQuantifier', array($expirationQuantifier));

        return parent::setExpirationQuantifier($expirationQuantifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationQuantifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationQuantifier', array());

        return parent::getExpirationQuantifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setCancellationUnit($cancellationUnit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCancellationUnit', array($cancellationUnit));

        return parent::setCancellationUnit($cancellationUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function getCancellationUnit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancellationUnit', array());

        return parent::getCancellationUnit();
    }

    /**
     * {@inheritDoc}
     */
    public function setCancellationQuantifier($cancellationQuantifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCancellationQuantifier', array($cancellationQuantifier));

        return parent::setCancellationQuantifier($cancellationQuantifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getCancellationQuantifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancellationQuantifier', array());

        return parent::getCancellationQuantifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoteEntity($noteEntity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoteEntity', array($noteEntity));

        return parent::setNoteEntity($noteEntity);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoteEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoteEntity', array());

        return parent::getNoteEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoteRenewal($noteRenewal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoteRenewal', array($noteRenewal));

        return parent::setNoteRenewal($noteRenewal);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoteRenewal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoteRenewal', array());

        return parent::getNoteRenewal();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoteUpgrade($noteUpgrade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoteUpgrade', array($noteUpgrade));

        return parent::setNoteUpgrade($noteUpgrade);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoteUpgrade()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoteUpgrade', array());

        return parent::getNoteUpgrade();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoteExpiration($noteExpiration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoteExpiration', array($noteExpiration));

        return parent::setNoteExpiration($noteExpiration);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoteExpiration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoteExpiration', array());

        return parent::getNoteExpiration();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotePrice($notePrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotePrice', array($notePrice));

        return parent::setNotePrice($notePrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotePrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotePrice', array());

        return parent::getNotePrice();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubscriptions(\Cx\Modules\Order\Model\Entity\Subscription $subscriptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubscriptions', array($subscriptions));

        return parent::addSubscriptions($subscriptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptions', array());

        return parent::getSubscriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addPrices(\Cx\Modules\Pim\Model\Entity\Price $prices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrices', array($prices));

        return parent::addPrices($prices);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrices', array());

        return parent::getPrices();
    }

    /**
     * {@inheritDoc}
     */
    public function addUpgrades(\Cx\Modules\Pim\Model\Entity\Product $upgrades)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUpgrades', array($upgrades));

        return parent::addUpgrades($upgrades);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpgrades()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpgrades', array());

        return parent::getUpgrades();
    }

    /**
     * {@inheritDoc}
     */
    public function getRenewalOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRenewalOptions', array());

        return parent::getRenewalOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setRenewalOptions($renewalOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRenewalOptions', array($renewalOptions));

        return parent::setRenewalOptions($renewalOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultRenewalOption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultRenewalOption', array());

        return parent::getDefaultRenewalOption();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultRenewalOption($defaultRenewalOption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultRenewalOption', array($defaultRenewalOption));

        return parent::setDefaultRenewalOption($defaultRenewalOption);
    }

    /**
     * {@inheritDoc}
     */
    public function getNewEntityForSale($saleOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewEntityForSale', array($saleOptions));

        return parent::getNewEntityForSale($saleOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityById($entityId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityById', array($entityId));

        return parent::getEntityById($entityId);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationDate($expirationUnit = '', $expirationQuantifier = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationDate', array($expirationUnit, $expirationQuantifier));

        return parent::getExpirationDate($expirationUnit, $expirationQuantifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getRenewalDate($unit, $quantifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRenewalDate', array($unit, $quantifier));

        return parent::getRenewalDate($unit, $quantifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getRenewalDefinition($unit, $quantifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRenewalDefinition', array($unit, $quantifier));

        return parent::getRenewalDefinition($unit, $quantifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentAmount($unit = 'month', $quantifier = 1, $currency = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentAmount', array($unit, $quantifier, $currency));

        return parent::getPaymentAmount($unit, $quantifier, $currency);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getComponentController()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComponentController', array());

        return parent::getComponentController();
    }

    /**
     * {@inheritDoc}
     */
    public function setVirtual($virtual)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVirtual', array($virtual));

        return parent::setVirtual($virtual);
    }

    /**
     * {@inheritDoc}
     */
    public function isVirtual()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVirtual', array());

        return parent::isVirtual();
    }

    /**
     * {@inheritDoc}
     */
    public function validate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', array());

        return parent::validate();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($methodName, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($methodName, $arguments));

        return parent::__call($methodName, $arguments);
    }

}
