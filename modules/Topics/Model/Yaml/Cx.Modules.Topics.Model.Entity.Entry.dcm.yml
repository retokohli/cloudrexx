Cx\Modules\Topics\Model\Entity\Entry:
  type: entity
  table: module_topics_entries
  gedmo:
    translation:
      locale: locale
      entity: Cx\Core\ContentManager\Model\Entity\Translation
# Not used:
#    loggable: true
# using specific personal LogEntryClass class:
#      logEntryClass: Cx\Core\ContentManager\Model\Entity\LogEntry
#    soft_deleteable:
#      field_name: deleted_at

  id:
    id:
      type: integer
      generator:
        strategy: AUTO

  fields:
    active:
      type: boolean
    name:
      type: string
      length: 255
      gedmo:
        translatable: {}
        sluggable:
          position: 0
#          field: 'slug'
# Note: In later versions of Doctrine, multiple slug fields are supported:
#          slugField: 'slug'
# Not used:
#        - versioned
    slug:
      type: string
      length: 255
      nullable: true
      gedmo:
        translatable: {}
        slug:
          separator: -
# Note: In later versions of Doctrine, multiple slug fields are supported:
          fields:
            - name
# Not used:
#        - versioned
    href:
      type: string
      length: 1024
      nullable: true
      gedmo:
        - translatable
# Not used:
#        - versioned
    description:
      type: string
      length: 65535
      gedmo:
        - translatable
# Not used:
#        - versioned
    created:
      type: datetime
      gedmo:
        timestampable:
          on: create
    updated:
      type: datetime
      nullable: true
      gedmo:
        timestampable:
          on: update

  indexes:
    active_idx:
      columns:
        - active
    name_idx:
      columns:
        - name
    slug_idx:
      columns:
        - slug
    description_idx:
      columns:
        - description
    created_idx:
      columns:
        - created
    updated_idx:
      columns:
        - updated

# Disabled, as the same slug may be used in more than one locale
#  uniqueConstraints:
#    slug_idx:
#      columns:
#        - slug

  manyToMany: # inverse
    # Required for bidirectional mapping.
    # Note that in order to add Entries to Categories,
    # you MUST use the owning side (Category::setEntries()).
    categories:
      targetEntity: Cx\Modules\Topics\Model\Entity\Category
      mappedBy: entries
